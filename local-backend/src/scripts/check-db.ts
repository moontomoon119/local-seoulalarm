import { LocalRepository } from '../repositories/local-repository';

async function main() {
  const repository = new LocalRepository();

  try {
    console.log('üîç Database Ï°∞Ìöå ÏãúÏûë...\n');

    // Ï†ÑÏ≤¥ Í≥µÍ≥† Ïàò
    const totalCount = await repository.count();
    console.log(`üìä Ï¥ù Í≥µÍ≥†Î¨∏ Ïàò: ${totalCount}Í∞ú`);

    // ÏµúÍ∑º 10Í∞ú Í≥µÍ≥† Ï°∞Ìöå
    const recentNotices = await repository.getRecent(10);
    console.log(`\nüìã ÏµúÍ∑º Í≥µÍ≥† ${recentNotices.length}Í∞ú:`);
    console.log('‚îÄ'.repeat(100));
    
    recentNotices.forEach((notice, index) => {
      console.log(`${index + 1}. [${notice.category}] ${notice.title}`);
      console.log(`   üìÖ ${notice.publishDate} | üìç ${notice.district}`);
      console.log(`   üîó ${notice.url}`);
      if (notice.content) {
        const preview = notice.content.replace(/\s+/g, ' ').slice(0, 100);
        console.log(`   üìù Î≥∏Î¨∏ ÏöîÏïΩ: ${preview}...`);
      } else {
        console.log(`   ‚ö†Ô∏è Î≥∏Î¨∏ ÏóÜÏùå`);
      }
      console.log('‚îÄ'.repeat(100));
    });

    // ÎßàÏßÄÎßâ ÎèôÍ∏∞Ìôî ÏãúÍ∞Ñ
    const lastSync = await repository.getLastSyncDate('Í∞ïÎÇ®Íµ¨');
    console.log(`\n‚è∞ ÎßàÏßÄÎßâ ÎèôÍ∏∞Ìôî: ${lastSync ? lastSync.toLocaleString('ko-KR') : 'ÏóÜÏùå'}`);

    // ÏûêÏπòÍµ¨Î≥Ñ ÌÜµÍ≥Ñ
    console.log('\nüìà ÏûêÏπòÍµ¨Î≥Ñ ÌÜµÍ≥Ñ:');
    const stats = await repository.getStatsByDistrict();
    stats.forEach(stat => {
      console.log(`  ${stat.district}: ${stat.count}Í∞ú`);
    });

  } catch (error) {
    console.error('‚ùå Error:', error);
  } finally {
    repository.close();
  }
}

main();
